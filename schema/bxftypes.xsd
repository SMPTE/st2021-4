<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2018 Society of Motion Picture and Television Engineers. All rights reserved. -->
<xs:schema xmlns="http://smpte-ra.org/schemas/2021/2018/BXF" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:pmcp="http://www.atsc.org/XMLSchemas/pmcp/2007/3.1" targetNamespace="http://smpte-ra.org/schemas/2021/2018/BXF" elementFormDefault="qualified" attributeFormDefault="unqualified" version="6.000">
		<xs:import namespace="http://www.atsc.org/XMLSchemas/pmcp/2007/3.1" schemaLocation="http://www.atsc.org/XMLSchemas/pmcp/2007/3.1/pmcp31.xsd"/>
	<xs:complexType name="BxfAddress">
		<xs:annotation>
			<xs:documentation>Address details</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LocationName" type="BxfText"/>
			<xs:element name="Street1" type="BxfText"/>
			<xs:element name="Street2" type="BxfText" minOccurs="0"/>
			<xs:element name="Street3" type="BxfText" minOccurs="0"/>
			<xs:element name="City" type="BxfText"/>
			<xs:element name="StateProv" type="BxfText"/>
			<xs:element name="Country" type="BxfText" minOccurs="0"/>
			<xs:element name="PostalCode" type="xs:string"/>
			<xs:element name="PrivateInformation" type="BxfPrivateInformation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BxfCompany">
		<xs:annotation>
			<xs:documentation>Defines all the attributes required for a company</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CompanyName" type="BxfText">
				<xs:annotation>
					<xs:documentation>The name of the company</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to designate the type of company such as an agency, advertiser, third party processor, station, network, producer (see enumerations).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Advertiser"/>
						<xs:enumeration value="Agency"/>
						<xs:enumeration value="Cable Network"/>
						<xs:enumeration value="Interconnect Content Distributor"/>
						<xs:enumeration value="Local Cable System"/>
						<xs:enumeration value="Producer"/>
						<xs:enumeration value="Program Distributor"/>
						<xs:enumeration value="Radio Network"/>
						<xs:enumeration value="Radio Station"/>
						<xs:enumeration value="MSO"/>
						<xs:enumeration value="MVPD"/>
						<xs:enumeration value="Satellite Service"/>
						<xs:enumeration value="TV Network"/>
						<xs:enumeration value="TV Station"/>
						<xs:enumeration value="Other"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CompanyDetails">
				<xs:annotation>
					<xs:documentation>Used to identify the company using specific identifiers and provide details about addresses and contacts associated with the company</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Identifiers" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Identifier" type="xs:string">
										<xs:annotation>
											<xs:documentation>Actual identifier for the company</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AuthoritativeIdSource" type="xs:string">
										<xs:annotation>
											<xs:documentation>The industry standards body or other source for the identification value listed for the company (e.g. 4A's ID, FCC Call Sign, IRS EIN#, etc.) (See Configuration Section in BXF Protocol Documentation)</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Locations" type="BxfAddress" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="Contacts" type="BxfContact" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PrivateInformation" type="BxfPrivateInformation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BxfContact">
		<xs:annotation>
			<xs:documentation>A contact is a person that is being referenced including phone, email and address details</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ContactSalutation" minOccurs="0"/>
			<xs:element name="ContactFirstName" type="BxfText"/>
			<xs:element name="ContactLastName" type="BxfText"/>
			<xs:element name="ContactSuffix" minOccurs="0"/>
			<xs:element name="ContactJobTitle" type="BxfText" minOccurs="0"/>
			<xs:element name="Locations" type="BxfAddress" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Phones" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PhoneNumber" type="xs:string"/>
						<xs:element name="PhoneType" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Business"/>
									<xs:enumeration value="Home"/>
									<xs:enumeration value="Mobile"/>
									<xs:enumeration value="Alternate"/>
									<xs:enumeration value="Fax"/>
									<xs:enumeration value="Other"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EMails" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Email">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="BxfText">
										<xs:attribute name="primaryFlag" type="xs:boolean" default="0">
											<xs:annotation>
												<xs:documentation>Used to designate one of the emails as a primary one to use for the contact</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="EmailType" minOccurs="0">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Alternate"/>
									<xs:enumeration value="Home"/>
									<xs:enumeration value="Office"/>
									<xs:enumeration value="Other"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PrivateInformation" type="BxfPrivateInformation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BxfCoverage">
		<xs:annotation>
			<xs:documentation>An area of physical locations that represent the coverage for a broadcast station or the areas of distribution for a distributor of media content.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CoverageName" type="xs:string">
				<xs:annotation>
					<xs:documentation>ZIPCODE 10022</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TypeofCoverage">
				<xs:annotation>
					<xs:documentation>Specifies the type of units used to define the coverage using a specific enumeration. (e.g. Zip code)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="City"/>
						<xs:enumeration value="Country"/>
						<xs:enumeration value="Market"/>
						<xs:enumeration value="DMA"/>
						<xs:enumeration value="Zipcode"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CoverageId" type="xs:string">
				<xs:annotation>
					<xs:documentation>The identifier within the type of units (e.g. 10022)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeRestrictFlag">
				<xs:annotation>
					<xs:documentation>Indicates if this is included or excluded from the definition of the coverage for the Station. (e.g. Include)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Include"/>
						<xs:enumeration value="Restrict"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BxfDateTime">
		<xs:annotation>
			<xs:documentation>Allows either SMPTE or UTC based date-time notation</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="SmpteDateTime" type="BxfSmpteDateTime"/>
			<xs:element name="UtcDateTime" type="BxfUtcDateTime"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BxfDaypart">
		<xs:annotation>
			<xs:documentation>A defined range of days, for one or more time period ranges and optionally dates that can be used to include or exclude for scheduling of content.  Note that it is possible to create illogical periods of time when potentially crossing the start of the broadcast day or crossing midnight depending on the system ingesting the definition.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DaypartDetail" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="DayOfWeek" type="DayPattern">
							<xs:annotation>
								<xs:documentation>A 7 element binary representation of the days of the week in Monday-Sunday order where a 1 includes the day and a 0 excludes the day 
(e.g. 1 1 1 1 1 0 0 = M-F) </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartTime" type="BxfSmpteTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The start time of the daypart for all  days specified in the DayofWeek element.  If not specified assume the Start of Broadcast Day.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EndTime" type="BxfSmpteTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The end time of the daypart for all  days specified in the DayofWeek element.  If not specified assume the End of Broadcast Day.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="localTimeZoneFlag" type="xs:boolean" use="required">
						<xs:annotation>
							<xs:documentation>Used to designate if the times in the daypart are to be treated as local times (1) or to alternately use a timezone designated in the dates field (0).</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="DaypartName" type="BxfText" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Optional name that can be used to reference this daypart definition.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The start date that the daypart is valid or can be used for the specified content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The end date that the daypart is valid or can be used for the specified content.  If not specified it remains valid until further notice.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DaypartComment" type="BxfText" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Optional comments that can be added to the daypart definition.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrivateInformation" type="BxfPrivateInformation" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="excludeFlag" type="xs:boolean" default="0">
			<xs:annotation>
				<xs:documentation>If set to 1, treat defined daypart as a period to be excluded.  If set to 0 then treat as a period to be included. Default value is 0.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Action-ErrorGroup"/>
	</xs:complexType>
	<xs:complexType name="BxfDuration">
		<xs:annotation>
			<xs:documentation>Duration can be expressed using either SMPTE time code or xs:duration</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="SmpteDuration" type="BxfSmpteTime"/>
			<xs:element name="UtcDuration" type="xs:duration"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BxfExtensions">
		<xs:annotation>
			<xs:documentation>Used to describe customized metadata using data pairs and optionally a validation data type. (v3.0)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemValue" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A value for the metadata type (e.g. 2011 Oscar for Best Actor)</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="BxfText">
							<xs:attribute name="itemName" type="xs:string" use="required">
								<xs:annotation>
									<xs:documentation>The name of the value (e.g. Best Actor)</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="itemType" type="xs:string" use="required">
								<xs:annotation>
									<xs:documentation>The type of the value (e.g. Oscar)</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="dataType">
								<xs:annotation>
									<xs:documentation>The validation that can be used for the ItemValue (e.g. string, integer, etc.)</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:string"/>
								</xs:simpleType>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="extensionType" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The name of the metadata that will be used to refer to the enumerated date (e.g. Awards)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BxfPrivateInformation">
		<xs:annotation>
			<xs:documentation>Any sequence of well-formed private XML elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BxfSmpteTime">
		<xs:annotation>
			<xs:documentation>Used for time duration or offset (V5.0 added support for 60 fps)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SmpteTimeCode" type="Smpte258MTimeCode">
				<xs:annotation>
					<xs:documentation>Specifies duration in the format HH:MM:SSpFF where "p" can be either a ":" ";" "," or "." to indicate drop frame or non-drop frame.  For details refer to SMPTE 258M, section 8.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="frameRate" type="xs:decimal">
			<xs:annotation>
				<xs:documentation>Specifies the number of frames per second and should always be provided if known</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="framecount" type="xs:integer">
			<xs:annotation>
				<xs:documentation>Note that this attribute name might be expected to be "frameCount", but was left unchanged from previous versions in order to preserve backward compatibility.  This is a documented exception as of v3.0.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Action-ErrorGroup"/>
	</xs:complexType>
	<xs:complexType name="BxfSmpteDateTime">
		<xs:annotation>
			<xs:documentation>Used for date-time entry in the schema</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BxfSmpteTime">
				<xs:attribute name="broadcastDate" type="xs:date" use="required">
					<xs:annotation>
						<xs:documentation>Date relative to the broadcast day of the schedule.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="utcStartofBroadcastDay" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>Conversion of the start of the broadcast day to UTC.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BxfStation">
		<xs:annotation>
			<xs:documentation>A transmitter or distributer of media content either over the air or by other means</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StationId" type="xs:string">
				<xs:annotation>
					<xs:documentation>A unique identifier within the context of this message to be used in conjunction with the InstructionMap element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StationName" type="BxfText">
				<xs:annotation>
					<xs:documentation>Name used to commonly reference the station, network or other entity performing a job.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StationCallSign" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Optional federal designation for an over the air broadcast station consisting of 3 to 4 characters. (e.g. WHN or KABC or CJON)</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="4"/>
						<xs:minLength value="3"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="StationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of enumerated types of JobPerformers that accept video and/or audio based advertising content.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Cable MSO"/>
						<xs:enumeration value="Content Distributor"/>
						<xs:enumeration value="Internet Distributor"/>
						<xs:enumeration value="Radio Broadcast"/>
						<xs:enumeration value="Radio Network"/>
						<xs:enumeration value="Satellite Network"/>
						<xs:enumeration value="Telco Distributor"/>
						<xs:enumeration value="TV Broadcast"/>
						<xs:enumeration value="TV Network"/>
						<xs:enumeration value="Other"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DistributionPlatform" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Method of distribution used by the Station.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="AM"/>
						<xs:enumeration value="FM"/>
						<xs:enumeration value="Internet"/>
						<xs:enumeration value="Mobile"/>
						<xs:enumeration value="TV"/>
						<xs:enumeration value="Other"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Ownership" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The company or companies that own the Station.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="BxfCompany">
							<xs:attribute name="percentOwnership">
								<xs:annotation>
									<xs:documentation>Percentage of ownership of the Station by the Company</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:integer">
										<xs:minInclusive value="1"/>
										<xs:maxInclusive value="100"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Contacts" type="BxfContact" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A list of contacts or personnel associated with the Station.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Coverage" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The definition using legally defined areas (e.g. Zip codes, DMA's, etc.) of the coverage provided by the station for a specific signal or distribution of their content.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="BxfCoverage">
							<xs:sequence>
								<xs:element name="CoverageChildren" type="BxfCoverage" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>The children of the definition that describe the coverage using a different TypeofCoverage (e.g. Zip code List)</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BxfText">
		<xs:annotation>
			<xs:documentation>Used for all free text entry elements in the schema</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="lang" type="pmcp:languageType"/>
				<xs:attribute name="size" type="xs:positiveInteger"/>
				<xs:attribute name="type" type="xs:string"/>
				<xs:attributeGroup ref="Action-ErrorGroup"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="BxfUtcDateTime">
		<xs:annotation>
			<xs:documentation>Standard UTC Date-Time</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:dateTime">
				<xs:attributeGroup ref="Action-ErrorGroup"/>
				<xs:attribute name="localTimeZone" type="xs:string">
					<xs:annotation>
						<xs:documentation>This can be used to display the name of the time zone or  the time zone code as designated by the Naval Observatory at http://aa.usno.navy.mil</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="EventNotes">
		<xs:annotation>
			<xs:documentation>Operator notes used to annotate the event with reference to the person that created the note.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EventNote" type="BxfText" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:attributeGroup name="Action-ErrorGroup">
		<xs:annotation>
			<xs:documentation>Used to set an action or report an error and add attribute extensibility</xs:documentation>
		</xs:annotation>
		<xs:attribute name="action" type="pmcp:actionType" use="optional"/>
		<xs:attribute name="error" type="BxfError" use="optional"/>
		<xs:attribute name="errorDescription" type="xs:string" use="optional"/>
		<xs:anyAttribute namespace="##any" processContents="lax"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PmcpActionErrorExtensionGroup">
		<xs:annotation>
			<xs:documentation>Used to set an action or report an error and add attribute extensibility</xs:documentation>
		</xs:annotation>
		<xs:attribute name="errorDescription" type="xs:string" use="optional"/>
		<xs:anyAttribute namespace="##any" processContents="lax"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QCTypeUnitRep">
		<xs:annotation>
			<xs:documentation>Used to set the allowed Types, Units and Representations for QC test items as of December 2016.  Expected to change with future technologies. (v5.0)</xs:documentation>
		</xs:annotation>
		<xs:attribute name="valueType">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="boolean"/>
					<xs:enumeration value="date"/>
					<xs:enumeration value="dateTime"/>
					<xs:enumeration value="enumeration"/>
					<xs:enumeration value="enumeration list"/>
					<xs:enumeration value="integer"/>
					<xs:enumeration value="integer list"/>
					<xs:enumeration value="language"/>
					<xs:enumeration value="real number"/>
					<xs:enumeration value="real number list"/>
					<xs:enumeration value="segment"/>
					<xs:enumeration value="string"/>
					<xs:enumeration value="string list"/>
					<xs:enumeration value="time"/>
					<xs:enumeration value="timecode"/>
					<xs:enumeration value="universal label"/>
					<xs:enumeration value="universal label list"/>
					<xs:enumeration value="other"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="measurementUnit">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="bit/s"/>
					<xs:enumeration value="bits"/>
					<xs:enumeration value="byte/s"/>
					<xs:enumeration value="bytes"/>
					<xs:enumeration value="dB"/>
					<xs:enumeration value="dBFS"/>
					<xs:enumeration value="dBTP"/>
					<xs:enumeration value="field/s"/>
					<xs:enumeration value="fields"/>
					<xs:enumeration value="frame/s"/>
					<xs:enumeration value="frames"/>
					<xs:enumeration value="hh:mm:ss:ff"/>
					<xs:enumeration value="hours"/>
					<xs:enumeration value="Hz"/>
					<xs:enumeration value="kB"/>
					<xs:enumeration value="kB/s"/>
					<xs:enumeration value="kbit/s"/>
					<xs:enumeration value="kbits"/>
					<xs:enumeration value="kHz"/>
					<xs:enumeration value="lines"/>
					<xs:enumeration value="LU"/>
					<xs:enumeration value="LUFS"/>
					<xs:enumeration value="MB"/>
					<xs:enumeration value="MB/s"/>
					<xs:enumeration value="Mbit/s"/>
					<xs:enumeration value="Mbits"/>
					<xs:enumeration value="MHz"/>
					<xs:enumeration value="ms"/>
					<xs:enumeration value="ns"/>
					<xs:enumeration value="pixels"/>
					<xs:enumeration value="sample/s"/>
					<xs:enumeration value="samples"/>
					<xs:enumeration value="seconds"/>
					<xs:enumeration value="other"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="representation">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="1 digit for second fraction"/>
					<xs:enumeration value="2 digits for second fraction"/>
					<xs:enumeration value="3 digits for second fraction"/>
					<xs:enumeration value="binary"/>
					<xs:enumeration value="binary left padded with zeros to length 2"/>
					<xs:enumeration value="binary left padded with zeros to length 3"/>
					<xs:enumeration value="binary left padded with zeros to length 4"/>
					<xs:enumeration value="binary left padded with zeros to length 5"/>
					<xs:enumeration value="binary left padded with zeros to length x"/>
					<xs:enumeration value="decimal"/>
					<xs:enumeration value="decimal with 1 fractional digit"/>
					<xs:enumeration value="decimal with 2 fractional digits"/>
					<xs:enumeration value="decimal with 3 fractional digits"/>
					<xs:enumeration value="decimal with x fractional digits"/>
					<xs:enumeration value="fraction"/>
					<xs:enumeration value="hexadecimal"/>
					<xs:enumeration value="hh:mm:ss:ff"/>
					<xs:enumeration value="hh:mm:ss;ff"/>
					<xs:enumeration value="percentage"/>
					<xs:enumeration value="percentage with 1 fractional digit"/>
					<xs:enumeration value="percentage with 2 fractional digits"/>
					<xs:enumeration value="percentage with 3 fractional digits"/>
					<xs:enumeration value="percentage with x fractional digits"/>
					<xs:enumeration value="x digits for second fractions"/>
					<xs:enumeration value="{a,b,...}"/>
					<xs:enumeration value="{true,false}"/>
					<xs:enumeration value="other"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:simpleType name="AsRunStatusType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Aired Without Discrepancy"/>
			<xs:enumeration value="Technical Difficulty"/>
			<xs:enumeration value="Did not air"/>
			<xs:enumeration value="Aired with Duration Discrepancy"/>
			<xs:enumeration value="Aired with Content Discrepancy"/>
			<xs:enumeration value="Preempted"/>
			<xs:enumeration value="Joined in Progress"/>
			<xs:enumeration value="Inserted by Operator"/>
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Missing Content"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BxfShortName">
		<xs:restriction base="pmcp:shortNameType"/>
	</xs:simpleType>
	<xs:simpleType name="BxfElementaryErrorExt">
		<xs:annotation>
			<xs:documentation>Type for an elementary error</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(system_unavailable|not_supported|duplicate_message|processing_exception)(:.*)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BxfElementaryError">
		<xs:annotation>
			<xs:documentation>Type for an elementary error</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="pmcp:elementaryErrorType BxfElementaryErrorExt"/>
	</xs:simpleType>
	<xs:simpleType name="BxfError">
		<xs:list itemType="BxfElementaryError"/>
	</xs:simpleType>
	<xs:simpleType name="BxfStatus">
		<xs:annotation>
			<xs:documentation>Status of a reply message</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="pmcp:statusType BxfStatusExtType"/>
	</xs:simpleType>
	<xs:simpleType name="BxfStatusExtType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="warning"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BxfUri">
		<xs:annotation>
			<xs:documentation>Used to denote a universal file location</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<xs:simpleType name="DayPattern">
		<xs:annotation>
			<xs:documentation>A binary representation of the days of the week with Monday in the left-most position (eg - "1111100" = M-F)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="7"/>
			<xs:pattern value="[0,1]{7}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DestinationType">
		<xs:annotation>
			<xs:documentation>Type of the destination system (see ATSC code point registry - www.atsc.org/standards/Code_Point_Registry.pdf)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="EiCode">
		<xs:annotation>
			<xs:documentation>FCC Children's and Information Codes</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="7"/>
			<xs:maxLength value="9"/>
			<xs:pattern value="E-I [0-9]{0,1}[0-9]-[0-9]{0,1}[0-9]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="EndModeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Duration"/>
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="External"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MessageType">
		<xs:annotation>
			<xs:documentation>Allowed types of messages in this schema</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Acknowledgement">
				<xs:annotation>
					<xs:documentation>An acknowledgement that a message was received.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Heartbeat">
				<xs:annotation>
					<xs:documentation>A message for checking connectivity.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Information">
				<xs:annotation>
					<xs:documentation>A notification of changes or request to do something that does not warrant a reply.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Message Status Request">
				<xs:annotation>
					<xs:documentation>A request for the status of a message that was previously sent.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Request">
				<xs:annotation>
					<xs:documentation>A request to do something that requires a reply.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Reply">
				<xs:annotation>
					<xs:documentation>A reply to a request message.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OperationalModeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="JIP"/>
			<xs:enumeration value="Expendable"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OriginType">
		<xs:annotation>
			<xs:documentation>Type of the origin system (see ATSC code point registry - www.atsc.org/standards/Code_Point_Registry.pdf)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="QueryStringIdentifier">
		<xs:annotation>
			<xs:documentation>Restricts Query ReturnStrucutre based on a pattern that would restrict the return structure to follow the “camel back” style used in the Schema</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-Z][a-zA-Z0-9]*(/[A-Z][a-zA-Z0-9]*)*(/\*){0,1}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="QueryString">
		<xs:annotation>
			<xs:documentation>Restricts the Query where clause based on a pattern.  Note that negation requests are not supported.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-Z][a-zA-Z0-9]*(/[A-Z][a-zA-Z0-9]*)*(/@[a-z][a-zA-Z0-9]*){0,1}(\s)*(=|&gt;=|&lt;|&lt;=|!=)\s*[&quot;][^&quot;]*[&quot;](\s+(AND|and|or|OR)\s+[A-Z][a-zA-Z0-9]*(/[A-Z][a-zA-Z0-9]*)*(/@[a-z][a-zA-Z0-9]*){0,1}\s*(=|&gt;=|&lt;|&lt;=|!=)\s*[&quot;][^&quot;]*[&quot;]\s*)*"/>
			<xs:pattern value="\*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ScheduleEventType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Primary"/>
			<xs:enumeration value="NonPrimary"/>
			<xs:enumeration value="Auxiliary"/>
			<xs:enumeration value="Comment"/>
			<xs:enumeration value="ProgramHeader"/>
			<xs:enumeration value="BreakHeader"/>
			<xs:enumeration value="Macro"/>
			<xs:enumeration value="Data"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ScheduleType">
		<xs:annotation>
			<xs:documentation>A type of schedule</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Primary"/>
			<xs:enumeration value="Alternate"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Smpte258MTimeCode">
		<xs:annotation>
			<xs:documentation>Reference SMPTE 258M, section 8 that supports 60 frames per second (v5.0)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:pattern value="(([0-1][0-9])|([2][0-3])):[0-5][0-9]:[0-5][0-9](([.,])|([:;]))[0-5][0-9]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StartModeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Follow"/>
			<xs:enumeration value="Fixed"/>
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="External"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Uuid">
		<xs:annotation>
			<xs:documentation xml:lang="en-US">A universal unique identifier, as described by RFC 4122.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI">
			<xs:length value="45"/>
			<xs:pattern value="urn:uuid:[a-fA-F0-9]{8}(\-[a-fA-F0-9]{4}){3}\-[a-fA-F0-9]{12}"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
